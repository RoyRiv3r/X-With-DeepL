{"version":3,"file":"scripts/contentScript.js","mappings":"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","sources":["webpack://xwithdeepl/./src/translator/translator.js","webpack://xwithdeepl/./src/utils/logger.js","webpack://xwithdeepl/./src/utils/storage.js","webpack://xwithdeepl/webpack/bootstrap","webpack://xwithdeepl/webpack/runtime/compat get default export","webpack://xwithdeepl/webpack/runtime/define property getters","webpack://xwithdeepl/webpack/runtime/hasOwnProperty shorthand","webpack://xwithdeepl/webpack/runtime/make namespace object","webpack://xwithdeepl/./src/scripts/twitter.js"],"sourcesContent":["// src/translator/translator.js\r\nimport { debugLog } from \"../utils/logger.js\";\r\n\r\nexport class Translator {\r\n  constructor() {}\r\n\r\n  async translateText(text, options) {\r\n    throw new Error(\"translateText method must be implemented\");\r\n  }\r\n}\r\n\r\nexport class DeepLTranslator extends Translator {\r\n  constructor(apiKey) {\r\n    super();\r\n    this.apiKey = apiKey;\r\n    this.urls = [\r\n      \"https://api-free.deepl.com/v2/translate\",\r\n      \"https://api.deepl.com/v2/translate\",\r\n    ];\r\n  }\r\n\r\n  async translateText(htmlContent, options = {}) {\r\n    const {\r\n      targetLanguage = \"EN-US\",\r\n      formality = \"default\",\r\n      splitSentences = \"1\",\r\n      preserveFormatting = \"1\",\r\n    } = options;\r\n\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(htmlContent, \"text/html\");\r\n\r\n    // Get all text nodes\r\n    const textNodes = [];\r\n    const walker = document.createTreeWalker(\r\n      doc.body,\r\n      NodeFilter.SHOW_TEXT,\r\n      null,\r\n      false\r\n    );\r\n\r\n    let node;\r\n    while ((node = walker.nextNode())) {\r\n      if (node.nodeValue.trim() !== \"\") {\r\n        textNodes.push(node);\r\n      }\r\n    }\r\n\r\n    // Extract texts\r\n    const textsToTranslate = textNodes.map((node) => node.nodeValue);\r\n\r\n    // Translate texts\r\n    let translatedTexts;\r\n    try {\r\n      translatedTexts = await this.translateTexts(textsToTranslate, {\r\n        targetLanguage,\r\n        formality,\r\n        splitSentences,\r\n        preserveFormatting,\r\n      });\r\n    } catch (error) {\r\n      throw new Error(`Translation failed: ${error.message}`);\r\n    }\r\n\r\n    // Replace original text with translated text\r\n    textNodes.forEach((node, index) => {\r\n      node.nodeValue = translatedTexts[index];\r\n    });\r\n\r\n    // Handle translatable attributes (optional)\r\n    const attributesToTranslate = getTranslatableAttributes(doc.body);\r\n    if (attributesToTranslate.length > 0) {\r\n      const attributeTexts = attributesToTranslate.map(\r\n        ({ attr }) => attr.value\r\n      );\r\n\r\n      // Translate attribute texts\r\n      let translatedAttributeTexts;\r\n      try {\r\n        translatedAttributeTexts = await this.translateTexts(attributeTexts, {\r\n          targetLanguage,\r\n          formality,\r\n          splitSentences,\r\n          preserveFormatting,\r\n        });\r\n      } catch (error) {\r\n        throw new Error(`Translation failed: ${error.message}`);\r\n      }\r\n\r\n      // Replace attribute texts\r\n      attributesToTranslate.forEach(({ node, attr }, index) => {\r\n        node.setAttribute(attr.name, translatedAttributeTexts[index]);\r\n      });\r\n    }\r\n\r\n    // Serialize back to HTML\r\n    const translatedHtmlContent = doc.body.innerHTML;\r\n\r\n    return translatedHtmlContent;\r\n  }\r\n\r\n  // Helper function to translate multiple texts with URL fallback\r\n  async translateTexts(texts, options) {\r\n    const { targetLanguage, formality, splitSentences, preserveFormatting } =\r\n      options;\r\n\r\n    let lastError;\r\n\r\n    for (const url of this.urls) {\r\n      try {\r\n        const params = new URLSearchParams();\r\n        params.append(\"auth_key\", this.apiKey);\r\n        texts.forEach((text) => params.append(\"text\", text));\r\n        params.append(\"target_lang\", targetLanguage);\r\n        params.append(\"formality\", formality);\r\n        params.append(\"split_sentences\", splitSentences);\r\n        params.append(\"preserve_formatting\", preserveFormatting);\r\n\r\n        debugLog(\"Sending request to DeepL API:\", {\r\n          url,\r\n          params: params.toString(),\r\n        });\r\n\r\n        const response = await fetch(url, {\r\n          method: \"POST\",\r\n          body: params,\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        debugLog(\"Received response from DeepL API:\", data);\r\n\r\n        if (response.ok) {\r\n          return data.translations.map((translation) => translation.text);\r\n        } else {\r\n          lastError = new Error(data.message || \"Translation failed\");\r\n          debugLog(\"Translation error:\", lastError.message);\r\n          // Optionally handle specific error cases or logging\r\n        }\r\n      } catch (error) {\r\n        lastError = error;\r\n        debugLog(\"Caught error during translation:\", error);\r\n        // Optionally handle specific error cases or logging\r\n      }\r\n    }\r\n\r\n    // If all attempts failed, throw the last error\r\n    throw lastError;\r\n  }\r\n}\r\n\r\n// Helper function to get translatable attributes\r\nfunction getTranslatableAttributes(node) {\r\n  const attributes = [];\r\n  if (node.hasAttributes()) {\r\n    for (let attr of node.attributes) {\r\n      if ([\"alt\", \"title\"].includes(attr.name) && attr.value.trim() !== \"\") {\r\n        attributes.push({ node, attr });\r\n      }\r\n    }\r\n  }\r\n  for (let child of node.children) {\r\n    attributes.push(...getTranslatableAttributes(child));\r\n  }\r\n  return attributes;\r\n}\r\n","// src/utils/logger.js\r\n\r\nfunction debugLog(...args) {\r\n  const debugEnabled = true; // Set to true to enable logging\r\n  if (debugEnabled) {\r\n    console.log(\"[Twitter-DeepL]\", ...args);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  debugLog,\r\n};\r\n","// src/utils/storage.js\n\nasync function getSetting(key) {\n  const result = await browser.storage.sync.get(key);\n  return result[key];\n}\n\nasync function setSetting(key, value) {\n  await browser.storage.sync.set({ [key]: value });\n}\n\nmodule.exports = {\n  getSetting,\n  setSetting,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/scripts/twitter.js\r\n\r\nimport { getSetting } from \"../utils/storage.js\";\r\nimport { debugLog } from \"../utils/logger.js\";\r\nimport { DeepLTranslator } from \"../translator/translator.js\";\r\n// Load localization\r\nlet localization = {};\r\n\r\n(async () => {\r\n  debugLog(\"Extension script started\");\r\n\r\n  const translationState = new WeakMap();\r\n  let observer;\r\n  let removeTwitterTranslateButtonSetting = true; // default value\r\n  let autoTranslateInStatus = false; // default value\r\n\r\n  // Get settings\r\n  removeTwitterTranslateButtonSetting =\r\n    (await getSetting(\"remove_twitter_translate_button\")) !== false;\r\n\r\n  const autoTranslateSetting = await getSetting(\"auto_translate_in_status\");\r\n  autoTranslateInStatus =\r\n    autoTranslateSetting === true || autoTranslateSetting === \"true\";\r\n\r\n  debugLog(`Auto-translate setting retrieved: ${autoTranslateInStatus}`);\r\n\r\n  // Listen for storage changes to update settings dynamically\r\n  browser.storage.onChanged.addListener((changes, area) => {\r\n    if (area === \"local\") {\r\n      if (changes.auto_translate_in_status) {\r\n        autoTranslateInStatus =\r\n          changes.auto_translate_in_status.newValue === true ||\r\n          changes.auto_translate_in_status.newValue === \"true\";\r\n        debugLog(`Auto-translate setting updated: ${autoTranslateInStatus}`);\r\n      }\r\n      if (changes.remove_twitter_translate_button) {\r\n        removeTwitterTranslateButtonSetting =\r\n          changes.remove_twitter_translate_button.newValue !== false;\r\n        debugLog(\r\n          `Remove Twitter Translate Button setting updated: ${removeTwitterTranslateButtonSetting}`\r\n        );\r\n      }\r\n      // Handle other settings if needed\r\n    }\r\n  });\r\n\r\n  // Detect Twitter's language\r\n  const twitterLang = document.documentElement.lang || \"en\";\r\n  await loadLocalization(twitterLang);\r\n\r\n  // Initialize IntersectionObserver\r\n  const visibilityObserver = new IntersectionObserver(handleVisibilityChange, {\r\n    root: null,\r\n    threshold: 0.1, // Adjust as needed\r\n  });\r\n\r\n  // Start observing tweets and notes\r\n  observeContent();\r\n\r\n  /**\r\n   * Loads localization strings based on the provided language code.\r\n   * @param {string} langCode - The language code (e.g., 'en', 'fr').\r\n   */\r\n  async function loadLocalization(langCode) {\r\n    try {\r\n      const response = await fetch(\r\n        browser.runtime.getURL(\"../locales/lang.json\")\r\n      );\r\n      if (response.ok) {\r\n        const allLocalizations = await response.json();\r\n        // Try to get the localization for the detected language\r\n        localization = allLocalizations[langCode] || allLocalizations[\"en\"];\r\n      } else {\r\n        console.error(\"Error loading lang.json:\", response.status);\r\n        localization = {};\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading localization:\", error);\r\n      localization = {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the MutationObserver to monitor tweets and notes.\r\n   */\r\n  function observeContent() {\r\n    debugLog(\"Initializing observer for tweets and notes\");\r\n\r\n    const tweetTextSelector = 'div[data-testid=\"tweetText\"]';\r\n    const noteTextSelector = [\r\n      // Notes on the tweet's page (/status/)\r\n      'div[data-testid=\"birdwatch-pivot\"] > div[dir=\"ltr\"].css-146c3p1',\r\n      // Notes on the /i/birdwatch/ page\r\n      'div.css-175oi2r.r-1471scf.r-18u37iz.r-iphfwy.r-1h8ys4a > div[dir=\"ltr\"].css-146c3p1',\r\n    ].join(\", \");\r\n\r\n    // Process existing tweets and notes\r\n    document\r\n      .querySelectorAll(`${tweetTextSelector}, ${noteTextSelector}`)\r\n      .forEach(processTextElement);\r\n\r\n    observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType !== Node.ELEMENT_NODE) return;\r\n\r\n          if (removeTwitterTranslateButtonSetting) {\r\n            // Remove \"Translate post\" or \"Translate note\" button if it appears\r\n            if (isTranslatePostButton(node)) {\r\n              node.remove();\r\n            }\r\n          }\r\n\r\n          // Process tweets and notes\r\n          if (node.matches(tweetTextSelector) || isNoteTextElement(node)) {\r\n            processTextElement(node);\r\n          }\r\n\r\n          // Process nested elements\r\n          node\r\n            .querySelectorAll(\r\n              `${tweetTextSelector}:not([data-deepl-processed]), ${noteTextSelector}:not([data-deepl-processed])`\r\n            )\r\n            .forEach(processTextElement);\r\n\r\n          if (removeTwitterTranslateButtonSetting) {\r\n            // Remove \"Translate post\" or \"Translate note\" buttons inside nested elements\r\n            node.querySelectorAll('button[role=\"button\"]').forEach((button) => {\r\n              if (isTranslatePostButton(button)) {\r\n                button.remove();\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Processes a text element (tweet or note) by adding the translate button.\r\n   * @param {HTMLElement} textElement - The tweet or note text element.\r\n   */\r\n  function processTextElement(textElement) {\r\n    if (textElement.dataset.deeplProcessed) return;\r\n\r\n    const isNote = isNoteTextElement(textElement);\r\n    const container = findContainerElement(textElement, isNote);\r\n\r\n    if (!container) {\r\n      debugLog(\"Container element not found\");\r\n      return;\r\n    }\r\n\r\n    removeExistingTranslateButtons(container);\r\n\r\n    if (removeTwitterTranslateButtonSetting) {\r\n      removeTwitterTranslateButton(container); // Remove Twitter's \"Translate post/note\" button\r\n    }\r\n\r\n    let translateButton = isNote\r\n      ? createTranslateNoteButton()\r\n      : createTranslateTweetButton();\r\n\r\n    insertTranslateButton(textElement, translateButton, isNote);\r\n\r\n    translationState.set(textElement, {\r\n      isTranslated: false,\r\n      originalText: null,\r\n      translatedText: null,\r\n      showMoreElement: null, // To preserve the \"Show more\" element\r\n      translateButton: translateButton,\r\n      isProcessing: false,\r\n    });\r\n\r\n    textElement.dataset.deeplProcessed = \"true\";\r\n\r\n    translateButton.addEventListener(\"click\", async () => {\r\n      await handleTranslateButtonClick(textElement, translateButton);\r\n    });\r\n\r\n    // Observe the textElement for visibility\r\n    if (\r\n      autoTranslateInStatus &&\r\n      window.location.pathname.includes(\"/status/\") &&\r\n      !window.location.pathname.endsWith(\"/quotes\")\r\n    ) {\r\n      visibilityObserver.observe(textElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * IntersectionObserver callback to handle visibility changes.\r\n   */\r\n  function handleVisibilityChange(entries, observer) {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        const textElement = entry.target;\r\n        const state = translationState.get(textElement);\r\n        if (state && !state.isTranslated && !state.isProcessing) {\r\n          state.isProcessing = true;\r\n          handleTranslateButtonClick(textElement, state.translateButton);\r\n        }\r\n        observer.unobserve(textElement); // Stop observing after processing\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if an element is a note text element.\r\n   * @param {HTMLElement} element - The DOM element to check.\r\n   * @returns {boolean} True if the element is a note text element.\r\n   */\r\n  function isNoteTextElement(element) {\r\n    return (\r\n      // Note on the tweet's page (/status/)\r\n      (element.matches('div[dir=\"ltr\"].css-146c3p1') &&\r\n        element.parentElement &&\r\n        element.parentElement.matches('div[data-testid=\"birdwatch-pivot\"]')) ||\r\n      // Notes on the /i/birdwatch/ page\r\n      (element.matches('div[dir=\"ltr\"].css-146c3p1') &&\r\n        element.parentElement &&\r\n        element.parentElement.matches(\r\n          \"div.css-175oi2r.r-1471scf.r-18u37iz.r-iphfwy.r-1h8ys4a\"\r\n        ))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Finds the container element for a text element.\r\n   * @param {HTMLElement} textElement - The text element.\r\n   * @param {boolean} isNote - Whether the text element is a note.\r\n   * @returns {HTMLElement|null} The container element or null if not found.\r\n   */\r\n  function findContainerElement(textElement, isNote) {\r\n    if (isNote) {\r\n      if (window.location.pathname.startsWith(\"/i/birdwatch\")) {\r\n        return textElement.closest(\r\n          \"div.css-175oi2r.r-1471scf.r-18u37iz.r-iphfwy.r-1h8ys4a\"\r\n        );\r\n      } else {\r\n        return textElement.closest('div[data-testid=\"birdwatch-pivot\"]');\r\n      }\r\n    } else {\r\n      return textElement.closest(\r\n        'article[data-testid=\"tweet\"], div[data-testid=\"tweet\"], div[role=\"article\"], div'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes existing translate buttons from a container.\r\n   * @param {HTMLElement} container - The container element.\r\n   */\r\n  function removeExistingTranslateButtons(container) {\r\n    const translateButtons = container.querySelectorAll(\r\n      \"button.deepl-translate-button\"\r\n    );\r\n    translateButtons.forEach((button) => {\r\n      // Remove the button's container div\r\n      if (button.parentElement) {\r\n        button.parentElement.remove();\r\n      } else {\r\n        button.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  function removeTwitterTranslateButton(container) {\r\n    const translateButtons = container.querySelectorAll(\r\n      'button[role=\"button\"]'\r\n    );\r\n    translateButtons.forEach((button) => {\r\n      if (isTranslatePostButton(button)) {\r\n        button.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  function isTranslatePostButton(element) {\r\n    if (element.tagName !== \"BUTTON\") return false;\r\n    if (element.getAttribute(\"role\") !== \"button\") return false;\r\n    const span = element.querySelector(\"span\");\r\n    const translatePostText = localization.translatePost || \"Translate post\";\r\n    const translateNoteText = localization.translateNote || \"Translate note\";\r\n    return (\r\n      span &&\r\n      (span.innerText.trim() === translatePostText ||\r\n        span.innerText.trim() === translateNoteText)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Inserts the translate button into the DOM.\r\n   * @param {HTMLElement} textElement - The text element.\r\n   * @param {HTMLElement} translateButton - The translate button element.\r\n   * @param {boolean} isNote - Whether the text element is a note.\r\n   */\r\n  function insertTranslateButton(textElement, translateButton, isNote) {\r\n    const buttonContainer = document.createElement(\"div\");\r\n    buttonContainer.style.display = \"inline-block\";\r\n    buttonContainer.style.width = \"auto\";\r\n    buttonContainer.style.marginTop = \"8px\";\r\n\r\n    if (isNote && window.location.pathname.startsWith(\"/i/birdwatch\")) {\r\n      // For notes on /i/birdwatch, wrap the button and add a line break\r\n      const container = document.createElement(\"div\");\r\n      container.appendChild(translateButton);\r\n\r\n      const lineBreak = document.createElement(\"br\");\r\n      container.appendChild(lineBreak);\r\n\r\n      buttonContainer.appendChild(container);\r\n\r\n      const containerElement = findContainerElement(textElement, true);\r\n      containerElement.appendChild(buttonContainer);\r\n    } else {\r\n      buttonContainer.appendChild(translateButton);\r\n\r\n      const parentNode = textElement.parentNode;\r\n\r\n      // Try to find the \"Show more\" link that follows the textElement\r\n      const showMoreLink = parentNode.querySelector(\r\n        '[data-testid=\"tweet-text-show-more-link\"]'\r\n      );\r\n\r\n      if (showMoreLink) {\r\n        // Insert after the \"Show more\" link\r\n        parentNode.insertBefore(buttonContainer, showMoreLink.nextSibling);\r\n      } else {\r\n        // Insert after the text element\r\n        parentNode.insertBefore(buttonContainer, textElement.nextSibling);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the click event on the translate button.\r\n   * @param {HTMLElement} textElement - The text element.\r\n   * @param {HTMLElement} translateButton - The translate button element.\r\n   */\r\n  async function handleTranslateButtonClick(textElement, translateButton) {\r\n    try {\r\n      const state = translationState.get(textElement);\r\n      if (!state) {\r\n        debugLog(\"No translation state found for this text element\");\r\n        return;\r\n      }\r\n\r\n      if (state.isTranslated) {\r\n        debugLog(\"Restoring original text\");\r\n        restoreOriginalText(textElement, state);\r\n        state.isTranslated = false;\r\n        updateButtonText(translateButton, false);\r\n      } else {\r\n        if (!state.translatedText) {\r\n          const apiKey = await getSetting(\"api_key\");\r\n          if (!apiKey) {\r\n            alert(\"Please set your DeepL API Key in the extension options.\");\r\n            return;\r\n          }\r\n\r\n          const translator = new DeepLTranslator(apiKey);\r\n          const targetLanguage =\r\n            (await getSetting(\"target_language\")) || \"EN-US\";\r\n          const formality = (await getSetting(\"formality\")) || \"default\";\r\n          const splitSentences = (await getSetting(\"split_sentences\")) ? 1 : 0;\r\n          const preserveFormatting = (await getSetting(\"preserve_formatting\"))\r\n            ? 1\r\n            : 0;\r\n\r\n          // Clone the textElement to manipulate it without affecting the DOM\r\n          const clonedTextElement = textElement.cloneNode(true);\r\n\r\n          // Remove the \"Show more\" link from the cloned element\r\n          const showMoreLink = clonedTextElement.querySelector(\r\n            '[data-testid=\"tweet-text-show-more-link\"]'\r\n          );\r\n          if (showMoreLink) {\r\n            showMoreLink.remove();\r\n          }\r\n\r\n          // Now capture the original text without the \"Show more\" link\r\n          state.originalText = clonedTextElement.innerHTML;\r\n\r\n          debugLog(\"Original text to translate:\", state.originalText);\r\n\r\n          try {\r\n            state.translatedText = await translator.translateText(\r\n              state.originalText,\r\n              {\r\n                targetLanguage,\r\n                formality,\r\n                splitSentences,\r\n                preserveFormatting,\r\n              }\r\n            );\r\n\r\n            debugLog(\"Translated text:\", state.translatedText);\r\n          } catch (error) {\r\n            alert(\r\n              `An error occurred while translating the text: ${error.message}`\r\n            );\r\n            console.error(\"Translation error:\", error);\r\n            state.isProcessing = false;\r\n            return;\r\n          }\r\n        }\r\n\r\n        // Update the textElement with the translated text\r\n        updateTextWithTranslation(textElement, state);\r\n        state.isTranslated = true;\r\n        updateButtonText(translateButton, true);\r\n      }\r\n    } catch (error) {\r\n      debugLog(\"Error in handleTranslateButtonClick:\", error);\r\n      console.error(\"Error in handleTranslateButtonClick:\", error);\r\n    } finally {\r\n      const state = translationState.get(textElement);\r\n      if (state) {\r\n        state.isProcessing = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the button text based on translation state.\r\n   * @param {HTMLElement} button - The translate button element.\r\n   * @param {boolean} isTranslated - Whether the text is currently translated.\r\n   */\r\n  function updateButtonText(button, isTranslated) {\r\n    const span = button.querySelector(\"span\");\r\n    if (span) {\r\n      if (isTranslated) {\r\n        span.innerText = localization.showOriginal || \"Show Original\";\r\n      } else {\r\n        span.innerText = button.dataset.originalText;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restores the original text of the text element.\r\n   * @param {HTMLElement} textElement - The text element.\r\n   * @param {Object} state - The translation state.\r\n   */\r\n  function restoreOriginalText(textElement, state) {\r\n    textElement.innerHTML = state.originalText;\r\n\r\n    // Reattach the \"Show more\" element if it exists\r\n    if (state.showMoreElement) {\r\n      const parentNode = textElement.parentNode;\r\n      parentNode.insertBefore(state.showMoreElement, textElement.nextSibling);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the text element with the translated text.\r\n   * @param {HTMLElement} textElement - The text element.\r\n   * @param {Object} state - The translation state.\r\n   */\r\n  function updateTextWithTranslation(textElement, state) {\r\n    textElement.innerHTML = state.translatedText;\r\n\r\n    // Reattach the \"Show more\" element if it exists\r\n    if (state.showMoreElement) {\r\n      const parentNode = textElement.parentNode;\r\n      parentNode.insertBefore(state.showMoreElement, textElement.nextSibling);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a translate button for tweets.\r\n   * @returns {HTMLElement} The translate button element.\r\n   */\r\n  function createTranslateTweetButton() {\r\n    const buttonText =\r\n      localization.translateWithDeepL || \"Translate with DeepL\";\r\n    const button = document.createElement(\"button\");\r\n    button.setAttribute(\"type\", \"button\");\r\n    button.classList.add(\"deepl-translate-button\");\r\n    button.dataset.originalText = buttonText;\r\n    applyButtonStyles(button);\r\n\r\n    const span = document.createElement(\"span\");\r\n    span.innerText = buttonText;\r\n    applySpanStyles(span);\r\n\r\n    button.appendChild(span);\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * Creates a translate button for notes.\r\n   * @returns {HTMLElement} The translate button element.\r\n   */\r\n  function createTranslateNoteButton() {\r\n    const buttonText =\r\n      localization.translateNoteWithDeepL || \"Translate note with DeepL\";\r\n    const button = document.createElement(\"button\");\r\n    button.setAttribute(\"type\", \"button\");\r\n    button.classList.add(\"deepl-translate-button\");\r\n    button.dataset.originalText = buttonText;\r\n    applyButtonStyles(button);\r\n\r\n    const span = document.createElement(\"span\");\r\n    span.innerText = buttonText;\r\n    applySpanStylesNote(span);\r\n\r\n    button.appendChild(span);\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * Applies common styles to the translate button element.\r\n   * @param {HTMLElement} button - The button element.\r\n   */\r\n  function applyButtonStyles(button) {\r\n    button.style.display = \"inline-flex\";\r\n    button.style.alignItems = \"center\";\r\n    button.style.cursor = \"pointer\";\r\n    button.style.background = \"none\";\r\n    button.style.border = \"none\";\r\n    button.style.padding = \"0\";\r\n    button.style.margin = \"0\";\r\n    button.style.font = \"inherit\";\r\n    button.style.verticalAlign = \"baseline\";\r\n    button.style.width = \"auto\";\r\n    button.style.maxWidth = \"none\";\r\n    button.style.flexShrink = \"0\";\r\n    button.style.alignSelf = \"flex-start\";\r\n    button.style.color = \"rgb(29, 155, 240)\";\r\n\r\n    button.addEventListener(\"mouseover\", () => {\r\n      const span = button.querySelector(\"span\");\r\n      if (span) span.style.textDecoration = \"underline\";\r\n    });\r\n    button.addEventListener(\"mouseout\", () => {\r\n      const span = button.querySelector(\"span\");\r\n      if (span) span.style.textDecoration = \"none\";\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Applies common styles to the span element inside the button.\r\n   * @param {HTMLElement} span - The span element.\r\n   */\r\n  function applySpanStyles(span) {\r\n    span.style.fontFamily =\r\n      \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif\";\r\n    span.style.fontSize = \"15px\";\r\n    span.style.lineHeight = \"20px\";\r\n    span.style.textDecoration = \"none\";\r\n  }\r\n\r\n  /**\r\n   * Applies common styles to the span NOTE element inside the button.\r\n   * @param {HTMLElement} span - The span element.\r\n   */\r\n  function applySpanStylesNote(span) {\r\n    span.style.fontFamily =\r\n      \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif\";\r\n    span.style.fontSize = \"15px\";\r\n    span.style.lineHeight = \"20px\";\r\n    span.style.textDecoration = \"none\";\r\n    span.style.marginLeft = \"10px\";\r\n  }\r\n})();\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","debugLog","Translator","_translateText","_callee","text","options","_callee$","_context","translateText","_x","_x2","DeepLTranslator","_Translator","apiKey","_this","_callSuper","urls","_inherits","_translateText2","_callee2","htmlContent","_options$targetLangua","targetLanguage","_options$formality","formality","_options$splitSentenc","splitSentences","_options$preserveForm","preserveFormatting","parser","doc","textNodes","walker","node","textsToTranslate","translatedTexts","attributesToTranslate","attributeTexts","translatedAttributeTexts","translatedHtmlContent","_args2","_callee2$","_context2","undefined","DOMParser","parseFromString","document","createTreeWalker","body","NodeFilter","SHOW_TEXT","nextNode","nodeValue","trim","map","translateTexts","t0","concat","message","index","getTranslatableAttributes","_ref","attr","t1","_ref2","setAttribute","innerHTML","_x3","_translateTexts","_callee3","texts","_this2","lastError","_iterator","_step","_loop","_ret","_callee3$","_context4","_createForOfIteratorHelper","url","params","response","data","_loop$","_context3","URLSearchParams","append","toString","fetch","json","ok","translations","translation","_x4","_x5","attributes","hasAttributes","_iterator2","_step2","includes","err","_iterator3","children","_step3","child","_toConsumableArray","debugEnabled","_console","_len","args","Array","_key","console","log","module","exports","getSetting","_getSetting","result","browser","storage","sync","get","setSetting","_setSetting","set","_defineProperty","localization","_callee4","translationState","observer","removeTwitterTranslateButtonSetting","autoTranslateInStatus","autoTranslateSetting","twitterLang","visibilityObserver","loadLocalization","_loadLocalization","observeContent","processTextElement","handleVisibilityChange","isNoteTextElement","findContainerElement","removeExistingTranslateButtons","removeTwitterTranslateButton","isTranslatePostButton","insertTranslateButton","handleTranslateButtonClick","_handleTranslateButtonClick","updateButtonText","restoreOriginalText","updateTextWithTranslation","createTranslateTweetButton","createTranslateNoteButton","applyButtonStyles","applySpanStyles","applySpanStylesNote","_callee4$","_applySpanStylesNote","span","style","fontFamily","fontSize","lineHeight","textDecoration","marginLeft","_applySpanStyles","_applyButtonStyles","button","display","alignItems","cursor","background","border","padding","margin","font","verticalAlign","width","maxWidth","flexShrink","alignSelf","color","addEventListener","querySelector","_createTranslateNoteB","buttonText","translateNoteWithDeepL","createElement","classList","add","dataset","originalText","innerText","appendChild","_createTranslateTweet","translateWithDeepL","_updateTextWithTransl","textElement","state","translatedText","showMoreElement","parentNode","insertBefore","nextSibling","_restoreOriginalText","_updateButtonText","isTranslated","showOriginal","_handleTranslateButto2","translateButton","translator","clonedTextElement","showMoreLink","_state","alert","t2","t3","cloneNode","remove","t4","error","isProcessing","t5","_handleTranslateButto","_insertTranslateButto","isNote","buttonContainer","marginTop","window","location","pathname","startsWith","container","lineBreak","containerElement","_isTranslatePostButto","element","tagName","getAttribute","translatePostText","translatePost","translateNoteText","translateNote","_removeTwitterTransla","translateButtons","querySelectorAll","_removeExistingTransl","parentElement","_findContainerElement","closest","_isNoteTextElement","matches","_handleVisibilityChan","entries","entry","isIntersecting","target","unobserve","_processTextElement","deeplProcessed","endsWith","observe","_observeContent","tweetTextSelector","noteTextSelector","join","MutationObserver","mutations","mutation","addedNodes","nodeType","Node","ELEMENT_NODE","childList","subtree","_loadLocalization3","langCode","allLocalizations","runtime","getURL","status","_loadLocalization2","WeakMap","onChanged","addListener","changes","area","auto_translate_in_status","newValue","remove_twitter_translate_button","documentElement","lang","IntersectionObserver","root","threshold"],"sourceRoot":""}